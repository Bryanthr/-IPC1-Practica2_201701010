package ipc1.practica2_201701010;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

class Registro implements Serializable {
    String dato1;
    String dato2;
    String dato3;
    String dato4;
    String dato5;

    public Registro(String dato1, String dato2, String dato3, String dato4, String dato5) {
        this.dato1 = dato1;
        this.dato2 = dato2;
        this.dato3 = dato3;
        this.dato4 = dato4;
        this.dato5 = dato5;
    }
}



public class Historial extends javax.swing.JFrame {

    public static Productos[] profesores = new Productos[50];
    private DefaultTableModel modeloPedido; // Variable miembro para el modelo de la tabla
    
    
    public Historial() {
        initComponents();
        modeloPedido = (DefaultTableModel) HistorialTabla.getModel(); // Inicializar el modelo
        Agregar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        HistorialTabla = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Historial de Pedidos");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        HistorialTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Veh√≠culo", "Distancia", "Total", "Fecha y Hora de Envio", "Fecha y Hora Entrega"
            }
        ));
        jScrollPane1.setViewportView(HistorialTabla);

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("Serializar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 668, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(80, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        this.setVisible(false);
        Productos pr = new Productos();
        pr.setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         JTable tabla = HistorialTabla; // Reemplaza "HistorialTabla" por el nombre de tu tabla real

    // Obtener el modelo de la tabla
    DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();

    // Obtener la cantidad de filas de la tabla
    int rowCount = modelo.getRowCount();

    // Crear un arreglo de registros
    Registro[] registros = new Registro[rowCount];

    // Recorrer las filas de la tabla
    for (int i = 0; i < rowCount; i++) {
        String dato1 = modelo.getValueAt(i, 0).toString();
        String dato2 = modelo.getValueAt(i, 1).toString();
        String dato3 = modelo.getValueAt(i, 2).toString();
        String dato4 = modelo.getValueAt(i, 3).toString();
        String dato5 = modelo.getValueAt(i, 4).toString();

        // Crear un nuevo registro y agregarlo al arreglo
        Registro registro = new Registro(dato1, dato2, dato3, dato4, dato5);
        registros[i] = registro;
    }

    try {
        FileOutputStream archivo = new FileOutputStream("C:\\Users\\Bryant Herrera\\Documents\\Respaldo.txt");
        ObjectOutputStream salida = new ObjectOutputStream(archivo);
        salida.writeObject(registros);
        salida.close();
        archivo.close();
        System.out.println("Se ha respaldado");
    } catch (Exception e) {
        System.out.println(e);
    }

    // Deserializar
    try {
        FileInputStream archivo = new FileInputStream("C:\\Users\\Bryant Herrera\\Documents\\Respaldo.txt");
        ObjectInputStream entrada = new ObjectInputStream(archivo);
        registros = (Registro[]) entrada.readObject();
        entrada.close();
        archivo.close();

        // Mostrar los datos cargados
        for (Registro registro : registros) {
            System.out.println(registro.dato1 + " " + registro.dato2 + " " + registro.dato3 + " " + registro.dato4 + " " + registro.dato5);
        }
    } catch (Exception e) {
        System.out.println(e);
    }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(Historial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(Historial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(Historial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(Historial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Historial().setVisible(true);
            }
        });
    }
    
    private void Agregar(){
        modeloPedido.addRow(new Object[]{Productos.vehiculoSeleccionado, Productos.kilometros, Productos.montoTotal, Productos.fechaHoraFormateada, Productos.fechaHoraEntregaFormateada});
    }
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable HistorialTabla;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
